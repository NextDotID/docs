"use strict";(self.webpackChunknext_id_doc=self.webpackChunknext_id_doc||[]).push([[9585],{9613:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var a=n(9496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=p(n),h=i,v=c["".concat(l,".").concat(h)]||c[h]||u[h]||r;return n?a.createElement(v,o(o({ref:t},d),{},{components:n})):a.createElement(v,o({ref:t},d))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},9295:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=n(7605),i=(n(9496),n(9613));n(8378);const r={id:"how-it-works",title:"How Next.ID works",sidebar_position:2},o=void 0,s={unversionedId:"introduction/how-it-works",id:"introduction/how-it-works",title:"How Next.ID works",description:"Here, we'll go through the core system design concepts of Next.ID and DIDs.",source:"@site/docs/introduction/how-it-works.md",sourceDirName:"introduction",slug:"/introduction/how-it-works",permalink:"/introduction/how-it-works",draft:!1,editUrl:"https://github.com/nextdotid/docs/edit/main/docs/introduction/how-it-works.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"how-it-works",title:"How Next.ID works",sidebar_position:2},sidebar:"docs",previous:{title:"Introduction",permalink:"/"},next:{title:"Twitter-Wallet Binding",permalink:"/getting-started/twitter-wallet-binding"}},l={},p=[{value:"Avatars in Next.ID",id:"avatars-in-nextid",level:2},{value:"ProofService",id:"proofservice",level:2},{value:"Binding an Avatar to an Application",id:"binding-an-avatar-to-an-application",level:3},{value:"Binding an Avatar to an Application via Ethereum wallet",id:"binding-an-avatar-to-an-application-via-ethereum-wallet",level:3},{value:"Revoke Binding",id:"revoke-binding",level:3},{value:"KVService",id:"kvservice",level:2},{value:"Write Data",id:"write-data",level:3}],d={toc:p},c="wrapper";function u(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Here, we'll go through the core system design concepts of Next.ID and DIDs."),(0,i.kt)("h2",{id:"avatars-in-nextid"},"Avatars in Next.ID"),(0,i.kt)("p",null,"Using the secp256k1 curve with the ECDSA algorithm, avatar key pairs are generated for actions on Next.ID (e.g., signing a follow action) applicable to both on-chain and off-chain activities. Next.ID's relation aggregation can map all these actions:\n",(0,i.kt)("img",{src:n(3150).Z,width:"2422",height:"1715"})),(0,i.kt)("h2",{id:"proofservice"},(0,i.kt)("a",{parentName:"h2",href:"/core-concepts/proof-service/ps-intro"},"ProofService")),(0,i.kt)("h3",{id:"binding-an-avatar-to-an-application"},(0,i.kt)("a",{parentName:"h3",href:"/getting-started/twitter-wallet-binding"},"Binding an Avatar to an Application")),(0,i.kt)("p",null,"In this scenario, the user requests an Avatar Binding to an Application, allowing an Avatar to be bound to a user account on the Application.\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"\xa0returns\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"\xa0and post-content based on the Application\u2019s\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"POST /v1/proof/payload"),"."),(0,i.kt)("p",null,"Then, the Application requests for the user\u2019s Avatar's Private Key to generate a signature based on\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),". Following which, the user publishes the Proof Post on target platforms. The Proof Post link and ID with\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"uuid"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"created_at"),"\xa0will be sent to\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"\xa0per request and be verified from the Application\u2019s post-content."),(0,i.kt)("p",null,"After\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"\xa0validates the Proof Post's existence and verifies the Private Key, it will relay the successful binding notification back to Application and User."),(0,i.kt)("p",null,"Example of how it will look like to a user:\xa0The user requests for an account (eg: @nextdotid on Twitter) to be bound to their Avatar. The user signs a transaction to authenticate ownership of the account of the Twitter account. Thzte Avatar then generates a public tweet with a signature. When published by the user, this tweet, along with the signature, independently verifies the user's linking of the account to the Avatar.\n",(0,i.kt)("img",{src:n(1433).Z,width:"1186",height:"676"})),(0,i.kt)("h3",{id:"binding-an-avatar-to-an-application-via-ethereum-wallet"},"Binding an Avatar to an Application via Ethereum wallet"),(0,i.kt)("p",null,"In this scenario, the user requests an Avatar Binding to an Application with identity\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"0xWALLET_ADDRESS"),".\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"\xa0will return the Avatar's\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"\xa0based on the Application\u2019s\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"POST /v1/proof/payload"),"."),(0,i.kt)("p",null,"Then, the Application requests the user\u2019s Avatar's Private Key to generate a signature based on Avatar",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),". After that, the Application requests user\u2019s Wallet's Private Key to generate a signature based on Wallet",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"validates the\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"uuid"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"created_at"),"\xa0with\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),", then verifies the Avatar's and Wallet's signature. After this, it will relay the successful binding notification back to the Application and User.\n",(0,i.kt)("img",{src:n(3245).Z,width:"1186",height:"676"})),(0,i.kt)("h3",{id:"revoke-binding"},"Revoke Binding"),(0,i.kt)("p",null,"In this scenario, User revokes a previously-established Binding made with an Application.\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"\xa0will return the Avatar's\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"\xa0based on the Application\u2019s\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"POST /v1/proof/payload"),"\xa0as a Revoke action."),(0,i.kt)("p",null,"Then, the Application requests the user\u2019s Avatar Private Key to generate a signature based on\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"."),(0,i.kt)("p",null,"After\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"ProofService"),"validates the signature with\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"uuid"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"created_at"),"\xa0from\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"\xa0, it verifies the Avatar's and Wallet's signatures for a Revoke action. When this is done, it will relay the successful Revoke notification back to the Application and user.\n",(0,i.kt)("img",{src:n(2027).Z,width:"1186",height:"676"})),(0,i.kt)("h2",{id:"kvservice"},(0,i.kt)("a",{parentName:"h2",href:"/core-concepts/proof-service/ks-intro"},"KVService")),(0,i.kt)("h3",{id:"write-data"},(0,i.kt)("a",{parentName:"h3",href:"core-concepts/proof-service/ks-intro#write-data"},"Write Data")),(0,i.kt)("p",null,"In this scenario, User requests for a modification on an Application.\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"KVService"),"\xa0will return the\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"\xa0based on the Application\u2019s\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"POST /v1/KV/payload"),"."),(0,i.kt)("p",null,"Then, the application requests the user\u2019s Avatar's Private Key to generate a signature based on\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"."),(0,i.kt)("p",null,"After\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"KVService"),"\xa0validates the signature with\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"uuid"),"\xa0and\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"created_at"),"\xa0from\xa0",(0,i.kt)("inlineCode",{parentName:"p"},"sign_payload"),"\xa0, it will then verify the Avatar Signature for the Write Data action. After that, it will relay the successful notification back to Application and User.\n",(0,i.kt)("img",{src:n(8950).Z,width:"1186",height:"676"})))}u.isMDXComponent=!0},3150:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/avatar-diagram-ed9b76208873c99d320131960efdbc02.png"},3245:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/ethereum-binding-6f923b29a476f38b32fa74caf033d85a.png"},1433:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/platform-binding-0331240b6a6400bc2a2f825f72083444.png"},2027:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/revoke-binding-f1008cc1addf99d2a650c3d98901ab6a.png"},8950:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/write-data-a09bcda7990a86b7dd50bc1a0676161d.png"},8378:(e,t,n)=>{n(9496)}}]);