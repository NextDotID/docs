"use strict";(self.webpackChunknext_id_doc=self.webpackChunknext_id_doc||[]).push([[2061],{586:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/verify-post-d0d9587cec7ec45656f929f5e05339d0.png"},3881:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(8101);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}},4857:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"getting-started/twitter-wallet-binding","title":"Twitter-Wallet Binding","description":"To get started, let\'s walk through a binding process with the most frequently used platform: Twitter - let\'s go!","source":"@site/docs/getting-started/twitter-wallet-binding.md","sourceDirName":"getting-started","slug":"/getting-started/twitter-wallet-binding","permalink":"/getting-started/twitter-wallet-binding","draft":false,"unlisted":false,"editUrl":"https://github.com/nextdotid/docs/edit/main/docs/getting-started/twitter-wallet-binding.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"twitter-wallet-binding","title":"Twitter-Wallet Binding","sidebar_position":1},"sidebar":"docs","previous":{"title":"How Next.ID works","permalink":"/introduction/how-it-works"},"next":{"title":"Importing Universal Profiles","permalink":"/getting-started/importing-universal-profiles"}}');var r=n(5105),s=n(3881);const a={id:"twitter-wallet-binding",title:"Twitter-Wallet Binding",sidebar_position:1},o=void 0,c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step-by-step: Setting up your first Avatar",id:"step-by-step-setting-up-your-first-avatar",level:2},{value:"Binding your Twitter account",id:"binding-your-twitter-account",level:2},{value:"Get a payload",id:"get-a-payload",level:3},{value:"Generate the signature",id:"generate-the-signature",level:3},{value:"Post a proof Tweet",id:"post-a-proof-tweet",level:3},{value:"Verify the proof",id:"verify-the-proof",level:3},{value:"Check your Avatar&#39;s status",id:"check-your-avatars-status",level:3}];function d(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"To get started, let's walk through a binding process with the most frequently used platform: Twitter - let's go!"}),"\n",(0,r.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"http://next.id/",children:"Next.ID"})," offers support for a standard REST API format across all services."]}),"\n",(0,r.jsx)(t.li,{children:"Familiarity with any programming language is sufficient for getting started."}),"\n",(0,r.jsx)(t.li,{children:"For demonstration purposes, we primarily use Python, TypeScript, and Node.js, as these are among the most commonly used programming languages."}),"\n",(0,r.jsx)(t.li,{children:"A basic understanding of cryptography will be beneficial."}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"New to this but keen on learning? Don't panic, you can learn it all in just a few hours!"}),"\n",(0,r.jsx)(t.h2,{id:"step-by-step-setting-up-your-first-avatar",children:"Step-by-step: Setting up your first Avatar"}),"\n",(0,r.jsx)(t.p,{children:"In the Crypto world, a cryptographic key pair is what stands as one of your Avatars. Next.ID uses by far the most secure algorithm to protect your sovereignty: curve secp256k1."}),"\n",(0,r.jsxs)(t.p,{children:["We're showing it by using Python's\xa0",(0,r.jsx)(t.a,{href:"https://pypi.org/project/secp256k1/",children:"secp256k1-py"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"First, install secp256k1-py lib:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"# get PIP installed in advance or use your own way\npip install secp256k1\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then generate your own private and public key pair:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"python -m secp256k1 privkey -p\n\n# ATTENTION! We intentionally replaced the last three digits of private key to be xxx.\n# Your private key is EVERYTHING. NEVER expose it to others or reveal it anywhere publicly.\n43c25fecc20e6b2a0d86c81a0202d125c0181deb9975d1170d80378c7e05bxxx\nPublic key: 03bce884894fdc4fb45475733be317dd3c289f003bceebb097ac79a6b95e6edc56\n"})}),"\n",(0,r.jsx)(t.p,{children:"With this one key pair, you now create an Avatar secured by unbreakable cryptography."}),"\n",(0,r.jsx)(t.h2,{id:"binding-your-twitter-account",children:"Binding your Twitter account"}),"\n",(0,r.jsx)(t.p,{children:"From here, we're demonstrating the whole process by using a Twitter handle and key-pair as generated above. Replace all fields with your own information -- you'll be prompted to do so accordingly."}),"\n",(0,r.jsxs)(t.p,{children:["Please take note especially to replace ",(0,r.jsx)(t.code,{children:"your_twitter_handle"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"get-a-payload",children:"Get a payload"}),"\n",(0,r.jsx)(t.p,{children:"If we're heading into space, there'll be a Rocket carrying us as a payload. Entering Cyberspace each time is similar."}),"\n",(0,r.jsxs)(t.p,{children:["First, let's get the payload needed to represent us. Calling REST API ",(0,r.jsx)(t.code,{children:"/proof/payload"})," by using POSTMAN or using cURL in the command line:"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(7401).A+"",width:"1756",height:"504"})}),"\n",(0,r.jsxs)(t.p,{children:["Replace the ",(0,r.jsx)(t.code,{children:"identity"})," and ",(0,r.jsx)(t.code,{children:"public_key"})," fields with your own information, and it will return like:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "post_content": {\n        "default": "\ud83c\udfad Verifying my Twitter ID @your_twitter_handle for @NextDotID.\\nSig: %SIG_BASE64%\\n\\nInstall Mask.io to enhance your Web3 experience.\\n",\n        "en_US": "\ud83c\udfad Verifying my Twitter ID @your_twitter_handle for @NextDotID.\\nSig: %SIG_BASE64%\\n\\nInstall Mask.io to enhance your Web3 experience.\\n",\n        "zh_CN": "\ud83c\udfad \u6b63\u5728\u901a\u8fc7 @NextDotID \u9a8c\u8bc1\u6211\u7684 Twitter \u5e10\u53f7 @your_twitter_handle \u3002\\nSig: %SIG_BASE64%\\n\\n\u8bf7\u4e0b\u8f7d\u5b89\u88c5 Mask.io \u53bb\u589e\u5f3a\u60a8\u7684 Web3 \u4f53\u9a8c\u3002\\n"\n    },\n    "sign_payload": "{\\"action\\":\\"create\\",\\"created_at\\":\\"1656843378\\",\\"identity\\":\\"your_twitter_handle\\",\\"platform\\":\\"twitter\\",\\"prev\\":\\"KNyNFtvhlRVJh/oU6RryK2n+C2dja9aLQPjlv5VHMsQErZROojEmMAgmeEQVC094EOuHIYcv3lCYXf8d3zqDCQE=\\",\\"uuid\\":\\"77f5ccaa-7919-4854-96de-81975f96744a\\"}",\n    "uuid": "77f5ccaa-7919-4854-96de-81975f96744a",\n    "created_at": "1656843378"\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"sign_payload"})," is the payload we're looking for. ",(0,r.jsx)(t.code,{children:"uuid"})," and ",(0,r.jsx)(t.code,{children:"created_at"})," are also required for the following steps."]}),"\n",(0,r.jsx)(t.h3,{id:"generate-the-signature",children:"Generate the signature"}),"\n",(0,r.jsxs)(t.p,{children:["With the payload returned, we can go ahead to sign it. Git clones our ",(0,r.jsx)(t.a,{href:"https://github.com/nextdotid/Signature-Generating-Sample",children:"open-source Demo in TypeScript"})," to accomplish this."]}),"\n",(0,r.jsxs)(t.p,{children:["Note: you'll need to set up Node.js and TypeScript before downloading, then go to install the required libs as ",(0,r.jsx)(t.code,{children:"ethereumjs-util"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Open the ",(0,r.jsx)(t.code,{children:"index.ts"})," file under ",(0,r.jsx)(t.code,{children:"/src"})," and replace the ",(0,r.jsx)(t.code,{children:"const message"})," with the string ",(0,r.jsx)(t.code,{children:"sign_payload"})," in the former step:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:'import { ecsign, toRpcSig, keccakFromString, BN } from \'ethereumjs-util\';\n\nasync function personalSign(message: Buffer, privateKey: Buffer): Promise<Buffer> {\n    const messageHash = keccakFromString(`\\x19Ethereum Signed Message:\\n${message.length}${message}`, 256)\n    const signature = ecsign(messageHash, privateKey)\n    return Buffer.from(toRpcSig(signature.v, signature.r, signature.s).slice(2), \'hex\')\n}\n\nasync function main() {\n    // this message come from the return attribute "sign_payload" of everytime calling API: v1/proof/payload\n    const message = Buffer.from(\'{\\"action\\":\\"create\\",\\"created_at\\":\\"1656843378\\",\\"identity\\":\\"your_twitter_handle\\",\\"platform\\":\\"twitter\\",\\"prev\\":\\"KNyNFtvhlRVJh/oU6RryK2n+C2dja9aLQPjlv5VHMsQErZROojEmMAgmeEQVC094EOuHIYcv3lCYXf8d3zqDCQE=\\",\\"uuid\\":\\"353449e6-3a6f-4ac8-ae65-ba14bf466baf\\"}\', \'utf8\');\n    // ATTENTION! RUN THIS LOCALLY! NEVER SHARE YOUR PRIVATE KEY WITH ANY OTHERS OR PUBLIC!\n    // replace XXX with your own Private Key for generating a signature\n    const secretKey = Buffer.from(\'XXX\', \'hex\');\n    const signature = await personalSign(message, secretKey);\n\n    console.log(`Signature: 0x${signature.toString(\'hex\')}`);\n    // For demo ONLY\n    // Signature: 0xf72fe6b00be411bd70ffe1b9bf322f18529ea10e9559dd26ba10387544849fc86d712709dfb709efc3dcc0a01b6f6b9ca98bd48fe780d58921f4926c6f2c0b871b\n\n    console.log(`Signature(base64): ${signature.toString(\'base64\')}`);\n    // For demo ONLY\n    // Signature(base64): 9y/msAvkEb1w/+G5vzIvGFKeoQ6VWd0muhA4dUSEn8htcScJ37cJ78PcwKAbb2ucqYvUj+eA1Ykh9JJsbywLhxs=\n}\n\nmain();\n'})}),"\n",(0,r.jsx)(t.p,{children:"Now we can run it properly. Go to the root directory to compile:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"$ tsc\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Go to the ",(0,r.jsx)(t.code,{children:"/disc"})," directory to get it running:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"$ node index.js\n"})}),"\n",(0,r.jsx)(t.p,{children:"We will get two console.log outputs. One is the Signature(base64) that we're going to use for proof posting on Twitter."}),"\n",(0,r.jsx)(t.h3,{id:"post-a-proof-tweet",children:"Post a proof Tweet"}),"\n",(0,r.jsxs)(t.p,{children:["Follow the format we get in calling ",(0,r.jsx)(t.code,{children:"/proof/payload"}),", replace the ",(0,r.jsx)(t.code,{children:"Sig"})," with Signature(base64) we just get and visit twitter.com to tweet as below:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"\ud83c\udfad Verifying my Twitter ID @your_twitter_handle for @NextDotID.\nSig: 9y/msAvkEb1w/+G5vzIvGFKeoQ6VWd0muhA4dUSEn8htcScJ37cJ78PcwKAbb2ucqYvUj+eA1Ykh9JJsbywLhxs=\n\nNext.ID YOUR DIGITAL IDENTITIES IN ONE PLACE\n"})}),"\n",(0,r.jsx)(t.p,{children:"Then go to the detail page of this tweet, get its ID at the end of the URL like `1543541274254639104``:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"https://twitter.com/your_twitter_handle/status/1543541274254639104\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This ID will be the ",(0,r.jsx)(t.code,{children:"proof_location"})," we need for verification."]}),"\n",(0,r.jsx)(t.h3,{id:"verify-the-proof",children:"Verify the proof"}),"\n",(0,r.jsxs)(t.p,{children:["We're getting close! Call the REST API ",(0,r.jsx)(t.code,{children:"/proof"})," by using POSTMAN or using cURL in the command line:"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:n(586).A+"",width:"1756",height:"650"})}),"\n",(0,r.jsxs)(t.p,{children:["It will return a code of ",(0,r.jsx)(t.code,{children:"201"})," Created` and empty curly brackets :"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"{}\n"})}),"\n",(0,r.jsx)(t.h3,{id:"check-your-avatars-status",children:"Check your Avatar's status"}),"\n",(0,r.jsx)(t.p,{children:"All set! Let's go to have a look at our newly created Avatar."}),"\n",(0,r.jsxs)(t.p,{children:["Call REST API ",(0,r.jsx)(t.code,{children:"/proof"}),"with ",(0,r.jsx)(t.code,{children:"GET"})," method and with two fields of ",(0,r.jsx)(t.code,{children:"platform"})," and ",(0,r.jsx)(t.code,{children:"identity"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"https://proof-service.nextnext.id/v1/proof?platform=twitter&identity=your_twitter_handle\n"})}),"\n",(0,r.jsx)(t.p,{children:"We will get as below:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-json",children:'{\n    "pagination": {\n        "total": 4,\n        "per": 20,\n        "current": 1,\n        "next": 0\n    },\n    "ids": [\n        {\n            "avatar": "0x03bce884894fdc4fb45475733be317dd3c289f003bceebb097ac79a6b95e6edc56",\n            "proofs": [\n                {\n                    "platform": "twitter",\n                    "identity": "your_twitter_handle",\n                    "created_at": "1656844114",\n                    "last_checked_at": "1656844114",\n                    "is_valid": true,\n                    "invalid_reason": ""\n                }\n            ]\n        }\n    ]\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"Congrats! You have successfully created an Avatar on-chain and bound it to your Twitter account."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},7401:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/get-payload-993e92252d7bfff848375af3e672ef0e.png"}}]);